{"version":3,"file":"js/178.a751ad12.js","mappings":"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","sources":["webpack://vue3-cms/./node_modules/lodash-es/throttle.js","webpack://vue3-cms/../../packages/components/image-viewer/src/image-viewer.ts","webpack://vue3-cms/../../packages/components/image-viewer/src/image-viewer.vue","webpack://vue3-cms/../../packages/components/image-viewer/index.ts","webpack://vue3-cms/../../packages/components/image/src/image.ts","webpack://vue3-cms/../../packages/utils/dom/position.ts","webpack://vue3-cms/../../packages/components/image/src/image.vue","webpack://vue3-cms/../../packages/components/image/index.ts","webpack://vue3-cms/./src/views/main/product/goods/config/table.config.ts","webpack://vue3-cms/./src/views/main/product/goods/goods.vue","webpack://vue3-cms/./src/views/main/product/goods/goods.vue?7121"],"sourcesContent":["import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n","import { buildProps, definePropType, mutable } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\n\nexport type ImageViewerAction =\n  | 'zoomIn'\n  | 'zoomOut'\n  | 'clockwise'\n  | 'anticlockwise'\n\nexport const imageViewerProps = buildProps({\n  urlList: {\n    type: definePropType<string[]>(Array),\n    default: () => mutable([] as const),\n  },\n  zIndex: {\n    type: Number,\n  },\n  initialIndex: {\n    type: Number,\n    default: 0,\n  },\n  infinite: {\n    type: Boolean,\n    default: true,\n  },\n  hideOnClickModal: {\n    type: Boolean,\n    default: false,\n  },\n  teleported: {\n    type: Boolean,\n    default: false,\n  },\n} as const)\nexport type ImageViewerProps = ExtractPropTypes<typeof imageViewerProps>\n\nexport const imageViewerEmits = {\n  close: () => true,\n  switch: (index: number) => typeof index === 'number',\n}\nexport type ImageViewerEmits = typeof imageViewerEmits\n","<template>\n  <teleport to=\"body\" :disabled=\"!teleported\">\n    <transition name=\"viewer-fade\" appear>\n      <div\n        ref=\"wrapper\"\n        :tabindex=\"-1\"\n        :class=\"ns.e('wrapper')\"\n        :style=\"{ zIndex: computedZIndex }\"\n      >\n        <div :class=\"ns.e('mask')\" @click.self=\"hideOnClickModal && hide()\" />\n\n        <!-- CLOSE -->\n        <span :class=\"[ns.e('btn'), ns.e('close')]\" @click=\"hide\">\n          <el-icon><Close /></el-icon>\n        </span>\n\n        <!-- ARROW -->\n        <template v-if=\"!isSingle\">\n          <span\n            :class=\"[\n              ns.e('btn'),\n              ns.e('prev'),\n              ns.is('disabled', !infinite && isFirst),\n            ]\"\n            @click=\"prev\"\n          >\n            <el-icon><ArrowLeft /></el-icon>\n          </span>\n          <span\n            :class=\"[\n              ns.e('btn'),\n              ns.e('next'),\n              ns.is('disabled', !infinite && isLast),\n            ]\"\n            @click=\"next\"\n          >\n            <el-icon><ArrowRight /></el-icon>\n          </span>\n        </template>\n        <!-- ACTIONS -->\n        <div :class=\"[ns.e('btn'), ns.e('actions')]\">\n          <div :class=\"ns.e('actions__inner')\">\n            <el-icon @click=\"handleActions('zoomOut')\">\n              <ZoomOut />\n            </el-icon>\n            <el-icon @click=\"handleActions('zoomIn')\">\n              <ZoomIn />\n            </el-icon>\n            <i :class=\"ns.e('actions__divider')\" />\n            <el-icon @click=\"toggleMode\">\n              <component :is=\"mode.icon\" />\n            </el-icon>\n            <i :class=\"ns.e('actions__divider')\" />\n            <el-icon @click=\"handleActions('anticlockwise')\">\n              <RefreshLeft />\n            </el-icon>\n            <el-icon @click=\"handleActions('clockwise')\">\n              <RefreshRight />\n            </el-icon>\n          </div>\n        </div>\n        <!-- CANVAS -->\n        <div :class=\"ns.e('canvas')\">\n          <img\n            v-for=\"(url, i) in urlList\"\n            v-show=\"i === index\"\n            :ref=\"(el) => (imgRefs[i] = el)\"\n            :key=\"url\"\n            :src=\"url\"\n            :style=\"imgStyle\"\n            :class=\"ns.e('img')\"\n            @load=\"handleImgLoad\"\n            @error=\"handleImgError\"\n            @mousedown=\"handleMouseDown\"\n          />\n        </div>\n        <slot />\n      </div>\n    </transition>\n  </teleport>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  effectScope,\n  markRaw,\n  nextTick,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { isNumber, useEventListener } from '@vueuse/core'\nimport { throttle } from 'lodash-unified'\nimport { useLocale, useNamespace, useZIndex } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { isFirefox } from '@element-plus/utils'\nimport ElIcon from '@element-plus/components/icon'\nimport {\n  ArrowLeft,\n  ArrowRight,\n  Close,\n  FullScreen,\n  RefreshLeft,\n  RefreshRight,\n  ScaleToOriginal,\n  ZoomIn,\n  ZoomOut,\n} from '@element-plus/icons-vue'\nimport { imageViewerEmits, imageViewerProps } from './image-viewer'\n\nimport type { CSSProperties } from 'vue'\nimport type { ImageViewerAction } from './image-viewer'\n\nconst Mode = {\n  CONTAIN: {\n    name: 'contain',\n    icon: markRaw(FullScreen),\n  },\n  ORIGINAL: {\n    name: 'original',\n    icon: markRaw(ScaleToOriginal),\n  },\n}\n\nconst mousewheelEventName = isFirefox() ? 'DOMMouseScroll' : 'mousewheel'\n\ndefineOptions({\n  name: 'ElImageViewer',\n})\n\nconst props = defineProps(imageViewerProps)\nconst emit = defineEmits(imageViewerEmits)\n\nconst { t } = useLocale()\nconst ns = useNamespace('image-viewer')\nconst { nextZIndex } = useZIndex()\nconst wrapper = ref<HTMLDivElement>()\nconst imgRefs = ref<any[]>([])\n\nconst scopeEventListener = effectScope()\n\nconst loading = ref(true)\nconst index = ref(props.initialIndex)\nconst mode = ref(Mode.CONTAIN)\nconst transform = ref({\n  scale: 1,\n  deg: 0,\n  offsetX: 0,\n  offsetY: 0,\n  enableTransition: false,\n})\n\nconst isSingle = computed(() => {\n  const { urlList } = props\n  return urlList.length <= 1\n})\n\nconst isFirst = computed(() => {\n  return index.value === 0\n})\n\nconst isLast = computed(() => {\n  return index.value === props.urlList.length - 1\n})\n\nconst currentImg = computed(() => {\n  return props.urlList[index.value]\n})\n\nconst imgStyle = computed(() => {\n  const { scale, deg, offsetX, offsetY, enableTransition } = transform.value\n  let translateX = offsetX / scale\n  let translateY = offsetY / scale\n\n  switch (deg % 360) {\n    case 90:\n    case -270:\n      ;[translateX, translateY] = [translateY, -translateX]\n      break\n    case 180:\n    case -180:\n      ;[translateX, translateY] = [-translateX, -translateY]\n      break\n    case 270:\n    case -90:\n      ;[translateX, translateY] = [-translateY, translateX]\n      break\n  }\n\n  const style: CSSProperties = {\n    transform: `scale(${scale}) rotate(${deg}deg) translate(${translateX}px, ${translateY}px)`,\n    transition: enableTransition ? 'transform .3s' : '',\n  }\n  if (mode.value.name === Mode.CONTAIN.name) {\n    style.maxWidth = style.maxHeight = '100%'\n  }\n  return style\n})\n\nconst computedZIndex = computed(() => {\n  return isNumber(props.zIndex) ? props.zIndex : nextZIndex()\n})\n\nfunction hide() {\n  unregisterEventListener()\n  emit('close')\n}\n\nfunction registerEventListener() {\n  const keydownHandler = throttle((e: KeyboardEvent) => {\n    switch (e.code) {\n      // ESC\n      case EVENT_CODE.esc:\n        hide()\n        break\n      // SPACE\n      case EVENT_CODE.space:\n        toggleMode()\n        break\n      // LEFT_ARROW\n      case EVENT_CODE.left:\n        prev()\n        break\n      // UP_ARROW\n      case EVENT_CODE.up:\n        handleActions('zoomIn')\n        break\n      // RIGHT_ARROW\n      case EVENT_CODE.right:\n        next()\n        break\n      // DOWN_ARROW\n      case EVENT_CODE.down:\n        handleActions('zoomOut')\n        break\n    }\n  })\n  const mousewheelHandler = throttle(\n    (e: WheelEvent | any /* TODO: wheelDelta is deprecated */) => {\n      const delta = e.wheelDelta ? e.wheelDelta : -e.detail\n      if (delta > 0) {\n        handleActions('zoomIn', {\n          zoomRate: 1.2,\n          enableTransition: false,\n        })\n      } else {\n        handleActions('zoomOut', {\n          zoomRate: 1.2,\n          enableTransition: false,\n        })\n      }\n    }\n  )\n\n  scopeEventListener.run(() => {\n    useEventListener(document, 'keydown', keydownHandler)\n    useEventListener(document, mousewheelEventName, mousewheelHandler)\n  })\n}\n\nfunction unregisterEventListener() {\n  scopeEventListener.stop()\n}\n\nfunction handleImgLoad() {\n  loading.value = false\n}\n\nfunction handleImgError(e: Event) {\n  loading.value = false\n  ;(e.target as HTMLImageElement).alt = t('el.image.error')\n}\n\nfunction handleMouseDown(e: MouseEvent) {\n  if (loading.value || e.button !== 0 || !wrapper.value) return\n  transform.value.enableTransition = false\n\n  const { offsetX, offsetY } = transform.value\n  const startX = e.pageX\n  const startY = e.pageY\n\n  const dragHandler = throttle((ev: MouseEvent) => {\n    transform.value = {\n      ...transform.value,\n      offsetX: offsetX + ev.pageX - startX,\n      offsetY: offsetY + ev.pageY - startY,\n    }\n  })\n  const removeMousemove = useEventListener(document, 'mousemove', dragHandler)\n  useEventListener(document, 'mouseup', () => {\n    removeMousemove()\n  })\n\n  e.preventDefault()\n}\n\nfunction reset() {\n  transform.value = {\n    scale: 1,\n    deg: 0,\n    offsetX: 0,\n    offsetY: 0,\n    enableTransition: false,\n  }\n}\n\nfunction toggleMode() {\n  if (loading.value) return\n\n  const modeNames = Object.keys(Mode)\n  const modeValues = Object.values(Mode)\n  const currentMode = mode.value.name\n  const index = modeValues.findIndex((i) => i.name === currentMode)\n  const nextIndex = (index + 1) % modeNames.length\n  mode.value = Mode[modeNames[nextIndex]]\n  reset()\n}\n\nfunction prev() {\n  if (isFirst.value && !props.infinite) return\n  const len = props.urlList.length\n  index.value = (index.value - 1 + len) % len\n}\n\nfunction next() {\n  if (isLast.value && !props.infinite) return\n  const len = props.urlList.length\n  index.value = (index.value + 1) % len\n}\n\nfunction handleActions(action: ImageViewerAction, options = {}) {\n  if (loading.value) return\n  const { zoomRate, rotateDeg, enableTransition } = {\n    zoomRate: 1.4,\n    rotateDeg: 90,\n    enableTransition: true,\n    ...options,\n  }\n  switch (action) {\n    case 'zoomOut':\n      if (transform.value.scale > 0.2) {\n        transform.value.scale = Number.parseFloat(\n          (transform.value.scale / zoomRate).toFixed(3)\n        )\n      }\n      break\n    case 'zoomIn':\n      if (transform.value.scale < 7) {\n        transform.value.scale = Number.parseFloat(\n          (transform.value.scale * zoomRate).toFixed(3)\n        )\n      }\n      break\n    case 'clockwise':\n      transform.value.deg += rotateDeg\n      break\n    case 'anticlockwise':\n      transform.value.deg -= rotateDeg\n      break\n  }\n  transform.value.enableTransition = enableTransition\n}\n\nwatch(currentImg, () => {\n  nextTick(() => {\n    const $img = imgRefs.value[0]\n    if (!$img?.complete) {\n      loading.value = true\n    }\n  })\n})\n\nwatch(index, (val) => {\n  reset()\n  emit('switch', val)\n})\n\nonMounted(() => {\n  registerEventListener()\n  // add tabindex then wrapper can be focusable via Javascript\n  // focus wrapper so arrow key can't cause inner scroll behavior underneath\n  wrapper.value?.focus?.()\n})\n</script>\n","import { withInstall } from '@element-plus/utils'\n\nimport ImageViewer from './src/image-viewer.vue'\n\nexport const ElImageViewer = withInstall(ImageViewer)\nexport default ElImageViewer\n\nexport * from './src/image-viewer'\n","import {\n  buildProps,\n  definePropType,\n  isNumber,\n  mutable,\n} from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const imageProps = buildProps({\n  appendToBody: {\n    type: Boolean,\n    default: undefined,\n  },\n  hideOnClickModal: {\n    type: Boolean,\n    default: false,\n  },\n  src: {\n    type: String,\n    default: '',\n  },\n  fit: {\n    type: String,\n    values: ['', 'contain', 'cover', 'fill', 'none', 'scale-down'],\n    default: '',\n  },\n  lazy: {\n    type: Boolean,\n    default: false,\n  },\n  scrollContainer: {\n    type: definePropType<string | HTMLElement | undefined>([String, Object]),\n  },\n  previewSrcList: {\n    type: definePropType<string[]>(Array),\n    default: () => mutable([] as const),\n  },\n  previewTeleported: {\n    type: Boolean,\n    default: false,\n  },\n  zIndex: {\n    type: Number,\n  },\n  initialIndex: {\n    type: Number,\n    default: 0,\n  },\n  infinite: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\nexport type ImageProps = ExtractPropTypes<typeof imageProps>\n\nexport const imageEmits = {\n  error: (evt: Event) => evt instanceof Event,\n  switch: (val: number) => isNumber(val),\n  close: () => true,\n}\nexport type ImageEmits = typeof imageEmits\n","import { isClient } from '@vueuse/core'\n\nexport const isInContainer = (\n  el?: Element,\n  container?: Element | Window\n): boolean => {\n  if (!isClient || !el || !container) return false\n\n  const elRect = el.getBoundingClientRect()\n\n  let containerRect: Pick<DOMRect, 'top' | 'bottom' | 'left' | 'right'>\n  if (container instanceof Element) {\n    containerRect = container.getBoundingClientRect()\n  } else {\n    containerRect = {\n      top: 0,\n      right: window.innerWidth,\n      bottom: window.innerHeight,\n      left: 0,\n    }\n  }\n  return (\n    elRect.top < containerRect.bottom &&\n    elRect.bottom > containerRect.top &&\n    elRect.right > containerRect.left &&\n    elRect.left < containerRect.right\n  )\n}\n\nexport const getOffsetTop = (el: HTMLElement) => {\n  let offset = 0\n  let parent = el\n\n  while (parent) {\n    offset += parent.offsetTop\n    parent = parent.offsetParent as HTMLElement\n  }\n\n  return offset\n}\n\nexport const getOffsetTopDistance = (\n  el: HTMLElement,\n  containerEl: HTMLElement\n) => {\n  return Math.abs(getOffsetTop(el) - getOffsetTop(containerEl))\n}\n\nexport const getClientXY = (event: MouseEvent | TouchEvent) => {\n  let clientX: number\n  let clientY: number\n  if (event.type === 'touchend') {\n    clientY = (event as TouchEvent).changedTouches[0].clientY\n    clientX = (event as TouchEvent).changedTouches[0].clientX\n  } else if (event.type.startsWith('touch')) {\n    clientY = (event as TouchEvent).touches[0].clientY\n    clientX = (event as TouchEvent).touches[0].clientX\n  } else {\n    clientY = (event as MouseEvent).clientY\n    clientX = (event as MouseEvent).clientX\n  }\n  return {\n    clientX,\n    clientY,\n  }\n}\n","<template>\n  <div ref=\"container\" :class=\"[ns.b(), $attrs.class]\" :style=\"containerStyle\">\n    <slot v-if=\"loading\" name=\"placeholder\">\n      <div :class=\"ns.e('placeholder')\" />\n    </slot>\n    <slot v-else-if=\"hasLoadError\" name=\"error\">\n      <div :class=\"ns.e('error')\">{{ t('el.image.error') }}</div>\n    </slot>\n    <img\n      v-else\n      v-bind=\"attrs\"\n      :src=\"src\"\n      :style=\"imageStyle\"\n      :class=\"[ns.e('inner'), preview ? ns.e('preview') : '']\"\n      @click=\"clickHandler\"\n    />\n    <template v-if=\"preview\">\n      <image-viewer\n        v-if=\"showViewer\"\n        :z-index=\"zIndex\"\n        :initial-index=\"imageIndex\"\n        :infinite=\"infinite\"\n        :url-list=\"previewSrcList\"\n        :hide-on-click-modal=\"hideOnClickModal\"\n        :teleported=\"teleported\"\n        @close=\"closeViewer\"\n        @switch=\"switchViewer\"\n      >\n        <div v-if=\"$slots.viewer\">\n          <slot name=\"viewer\" />\n        </div>\n      </image-viewer>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, onMounted, ref, watch } from 'vue'\nimport {\n  isBoolean,\n  isClient,\n  useEventListener,\n  useThrottleFn,\n} from '@vueuse/core'\nimport {\n  useAttrs,\n  useDeprecated,\n  useLocale,\n  useNamespace,\n} from '@element-plus/hooks'\nimport ImageViewer from '@element-plus/components/image-viewer'\nimport {\n  getScrollContainer,\n  isElement,\n  isInContainer,\n  isString,\n} from '@element-plus/utils'\nimport { imageEmits, imageProps } from './image'\n\nimport type { CSSProperties, StyleValue } from 'vue'\n\ndefineOptions({\n  name: 'ElImage',\n})\n\nconst props = defineProps(imageProps)\nconst emit = defineEmits(imageEmits)\n\nlet prevOverflow = ''\n\nuseDeprecated(\n  {\n    scope: 'el-image',\n    from: 'append-to-body',\n    replacement: 'preview-teleported',\n    version: '2.2.0',\n    ref: 'https://element-plus.org/en-US/component/image.html#image-attributess',\n  },\n  computed(() => isBoolean(props.appendToBody))\n)\n\nconst { t } = useLocale()\nconst ns = useNamespace('image')\n\nconst attrs = useAttrs()\nconst hasLoadError = ref(false)\nconst loading = ref(true)\nconst imgWidth = ref(0)\nconst imgHeight = ref(0)\nconst showViewer = ref(false)\nconst container = ref<HTMLElement>()\n\nconst _scrollContainer = ref<HTMLElement | Window>()\nlet stopScrollListener: () => void\nlet stopWheelListener: () => void\n\nconst containerStyle = computed(() => attrs.value.style as StyleValue)\n\nconst imageStyle = computed<CSSProperties>(() => {\n  const { fit } = props\n  if (isClient && fit) {\n    return { objectFit: fit }\n  }\n  return {}\n})\n\nconst preview = computed(() => {\n  const { previewSrcList } = props\n  return Array.isArray(previewSrcList) && previewSrcList.length > 0\n})\n\nconst teleported = computed(() => {\n  return props.appendToBody || props.previewTeleported\n})\n\nconst imageIndex = computed(() => {\n  const { previewSrcList, initialIndex } = props\n  let previewIndex = initialIndex\n  if (initialIndex > previewSrcList.length - 1) {\n    previewIndex = 0\n  }\n  return previewIndex\n})\n\nconst loadImage = () => {\n  if (!isClient) return\n\n  // reset status\n  loading.value = true\n  hasLoadError.value = false\n\n  const img = new Image()\n  const currentImageSrc = props.src\n\n  // load & error callbacks are only responsible for currentImageSrc\n  img.addEventListener('load', (e) => {\n    if (currentImageSrc !== props.src) {\n      return\n    }\n    handleLoad(e, img)\n  })\n  img.addEventListener('error', (e) => {\n    if (currentImageSrc !== props.src) {\n      return\n    }\n    handleError(e)\n  })\n\n  // bind html attrs\n  // so it can behave consistently\n  Object.entries(attrs.value).forEach(([key, value]) => {\n    // avoid onload to be overwritten\n    if (key.toLowerCase() === 'onload') return\n    img.setAttribute(key, value as string)\n  })\n  img.src = currentImageSrc\n}\n\nfunction handleLoad(e: Event, img: HTMLImageElement) {\n  imgWidth.value = img.width\n  imgHeight.value = img.height\n  loading.value = false\n  hasLoadError.value = false\n}\n\nfunction handleError(event: Event) {\n  loading.value = false\n  hasLoadError.value = true\n  emit('error', event)\n}\n\nfunction handleLazyLoad() {\n  if (isInContainer(container.value, _scrollContainer.value)) {\n    loadImage()\n    removeLazyLoadListener()\n  }\n}\n\nconst lazyLoadHandler = useThrottleFn(handleLazyLoad, 200)\n\nasync function addLazyLoadListener() {\n  if (!isClient) return\n\n  await nextTick()\n\n  const { scrollContainer } = props\n  if (isElement(scrollContainer)) {\n    _scrollContainer.value = scrollContainer\n  } else if (isString(scrollContainer) && scrollContainer !== '') {\n    _scrollContainer.value =\n      document.querySelector<HTMLElement>(scrollContainer) ?? undefined\n  } else if (container.value) {\n    _scrollContainer.value = getScrollContainer(container.value)\n  }\n\n  if (_scrollContainer.value) {\n    stopScrollListener = useEventListener(\n      _scrollContainer,\n      'scroll',\n      lazyLoadHandler\n    )\n    setTimeout(() => handleLazyLoad(), 100)\n  }\n}\n\nfunction removeLazyLoadListener() {\n  if (!isClient || !_scrollContainer.value || !lazyLoadHandler) return\n\n  stopScrollListener()\n  _scrollContainer.value = undefined\n}\n\nfunction wheelHandler(e: WheelEvent) {\n  if (!e.ctrlKey) return\n\n  if (e.deltaY < 0) {\n    e.preventDefault()\n    return false\n  } else if (e.deltaY > 0) {\n    e.preventDefault()\n    return false\n  }\n}\n\nfunction clickHandler() {\n  // don't show viewer when preview is false\n  if (!preview.value) return\n\n  stopWheelListener = useEventListener('wheel', wheelHandler, {\n    passive: false,\n  })\n\n  // prevent body scroll\n  prevOverflow = document.body.style.overflow\n  document.body.style.overflow = 'hidden'\n  showViewer.value = true\n}\n\nfunction closeViewer() {\n  stopWheelListener?.()\n  document.body.style.overflow = prevOverflow\n  showViewer.value = false\n  emit('close')\n}\n\nfunction switchViewer(val: number) {\n  emit('switch', val)\n}\n\nwatch(\n  () => props.src,\n  () => {\n    if (props.lazy) {\n      // reset status\n      loading.value = true\n      hasLoadError.value = false\n      removeLazyLoadListener()\n      addLazyLoadListener()\n    } else {\n      loadImage()\n    }\n  }\n)\n\nonMounted(() => {\n  if (props.lazy) {\n    addLazyLoadListener()\n  } else {\n    loadImage()\n  }\n})\n</script>\n","import { withInstall } from '@element-plus/utils'\n\nimport Image from './src/image.vue'\n\nexport const ElImage = withInstall(Image)\nexport default ElImage\n\nexport * from './src/image'\n","// import { ITableType } from '@/base-ui/table';\nexport const tableConfig = {\n  title: '用户',\n  tableIndexColumn: true,\n  tableSelectionColumn: true,\n  listProp: [\n    {\n      label: '商品名称',\n      prop: 'name',\n    },\n    {\n      label: '原价',\n      prop: 'oldPrice',\n      slotName: 'oldPrice',\n    },\n    {\n      label: '现价',\n      prop: 'newPrice',\n    },\n    {\n      label: '图片',\n      prop: 'imgUrl',\n      slotName: 'image',\n    },\n    {\n      label: '状态',\n      prop: 'enable',\n      slotName: 'enable',\n    },\n    {\n      label: '更新时间',\n      prop: 'updateAt',\n      slotName: 'updateAt',\n    },\n    {\n      label: '创建时间',\n      prop: 'createAt',\n      slotName: 'createAt',\n    },\n    {\n      label: '操作',\n      slotName: 'handle',\n    },\n  ],\n};\n","import { defineComponent as _defineComponent } from 'vue';\nimport { unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport pageContent from '@/components/page-content/src/page-content.vue';\nimport { tableConfig } from './config/table.config';\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props) {\n    return (_ctx, _cache) => {\n      const _component_el_image = _resolveComponent(\"el-image\");\n\n      return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(pageContent, {\n        tableConfig: _unref(tableConfig),\n        pageName: \"goods\"\n      }, {\n        image: _withCtx(scope => [_createVNode(_component_el_image, {\n          style: {\n            \"width\": \"50px\",\n            \"height\": \"50px\"\n          },\n          src: scope.row.imgUrl,\n          \"z-index\": 9\n        }, null, 8, [\"src\"])]),\n        oldPrice: _withCtx(scope => [_createTextVNode(_toDisplayString('¥' + scope.row.oldPrice), 1)]),\n        _: 1\n      }, 8, [\"tableConfig\"])]);\n    };\n  }\n\n});","/* unplugin-vue-components disabled */import script from \"./goods.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./goods.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["FUNC_ERROR_TEXT","throttle","func","wait","options","leading","trailing","TypeError","isObject","debounce","imageViewerProps","buildProps","urlList","type","definePropType","Array","default","mutable","zIndex","Number","initialIndex","infinite","Boolean","hideOnClickModal","teleported","imageViewerEmits","switch","index","CONTAIN","name","icon","ORIGINAL","t","nextZIndex","scale","deg","offsetX","offsetY","enableTransition","transform","transition","style","unregisterEventListener","emit","EVENT_CODE","hide","toggleMode","prev","handleActions","next","zoomRate","scopeEventListener","useEventListener","loading","e","removeMousemove","mode","reset","rotateDeg","watch","currentImg","nextTick","onMounted","registerEventListener","ElImageViewer","withInstall","ImageViewer","imageProps","appendToBody","String","values","Object","previewSrcList","imageEmits","error","evt","Event","val","isNumber","close","isInContainer","el","container","isClient","elRect","getBoundingClientRect","containerRect","Element","top","right","window","innerWidth","bottom","innerHeight","left","useDeprecated","scope","from","replacement","version","ref","computed","fit","objectFit","previewIndex","hasLoadError","img","handleLoad","handleError","imgWidth","imgHeight","loadImage","removeLazyLoadListener","async","scrollContainer","_scrollContainer","stopScrollListener","setTimeout","stopWheelListener","passive","prevOverflow","document","showViewer","addLazyLoadListener","ElImage","Image","tableConfig","title","tableIndexColumn","tableSelectionColumn","listProp","label","prop","slotName","setup","__props","_ctx","_cache","_component_el_image","pageName","image","src","row","imgUrl","oldPrice","_","__exports__"],"sourceRoot":""}